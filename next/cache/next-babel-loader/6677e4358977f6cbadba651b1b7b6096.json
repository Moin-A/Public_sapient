{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/moinahmed/public_sapient-assgnmt/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from \"next/head\";\nimport Filter from \"./Components/Filter\";\nimport React, { Component } from \"react\";\nimport Details from \"./Components/Details\";\nimport filter from \"./utils/filter\";\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      launch_year: [],\n      newdata: [],\n      SelectedLaunchYear: \"\",\n      SelectedOptions: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilter\", function (value) {\n      _this.setState({\n        SelectedOptions: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleyearchange\", function (value) {\n      _this.setState({\n        SelectedLaunchYear: value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        launch_year: this.props.launch_year,\n        newdata: _toConsumableArray(this.props.newdata)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          launch_year = _this$state.launch_year,\n          newdata = _this$state.newdata,\n          SelectedLaunchYear = _this$state.SelectedLaunchYear,\n          SelectedOptions = _this$state.SelectedOptions;\n      var filtered = SelectedLaunchYear ? newdata.filter(function (m) {\n        return m.launch_year == SelectedLaunchYear;\n      }) : newdata;\n      var secondfiltered = filter(filtered, SelectedOptions);\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Create Next App\"), __jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        style: {\n          backgroundColor: \"lightgrey\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, __jsx(\"h2\", {\n        className: \"m-4 m-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, \"SpaceX Launch programes \"), __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"col-3 m-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }\n      }, __jsx(Filter, {\n        launch_year: launch_year,\n        onYearChange: this.handleyearchange,\n        onOptionSelection: this.handleFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      })), __jsx(\"div\", {\n        className: \"col m-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, __jsx(Details, {\n        data: filtered,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data, filteredarray, launch_year, newdata;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=true&amp;land_success=true&amp;launch_year=2014\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                filteredarray = data.map(function (value) {\n                  return value.launch_year;\n                });\n                launch_year = Array.from(new Set(filteredarray));\n                newdata = Object.values(data);\n                return _context.abrupt(\"return\", {\n                  launch_year: launch_year,\n                  newdata: newdata\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/moinahmed/public_sapient-assgnmt/pages/index.js"],"names":["Head","Filter","React","Component","Details","filter","Home","launch_year","newdata","SelectedLaunchYear","SelectedOptions","value","setState","props","state","filtered","m","secondfiltered","backgroundColor","handleyearchange","handleFilter","fetch","res","json","data","filteredarray","map","Array","from","Set","Object","values"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport Filter from \"./Components/Filter\";\nimport React, { Component } from \"react\";\nimport Details from \"./Components/Details\";\nimport filter from \"./utils/filter\";\n\nclass Home extends Component {\n  state = {\n    launch_year: [],\n    newdata: [],\n    SelectedLaunchYear: \"\",\n    SelectedOptions: \"\",\n  };\n  componentDidMount() {\n    this.setState({\n      launch_year: this.props.launch_year,\n      newdata: [...this.props.newdata],\n    });\n  }\n\n  handleFilter = (value) => {\n    this.setState({ SelectedOptions: value });\n  };\n\n  handleyearchange = (value) => {\n    this.setState({ SelectedLaunchYear: value });\n  };\n\n  render() {\n    const {\n      launch_year,\n      newdata,\n      SelectedLaunchYear,\n      SelectedOptions,\n    } = this.state;\n    const filtered = SelectedLaunchYear\n      ? newdata.filter((m) => m.launch_year == SelectedLaunchYear)\n      : newdata;\n    const secondfiltered = filter(filtered, SelectedOptions);\n\n    return (\n      <>\n        <Head>\n          <title>Create Next App</title>\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Head>\n        <div style={{ backgroundColor: \"lightgrey\" }}>\n          <div className=\"container-fluid\">\n            <h2 className=\"m-4 m-4\">SpaceX Launch programes </h2>\n            <div className=\"row\">\n              <div className=\"col-3 m-4\">\n                <Filter\n                  launch_year={launch_year}\n                  onYearChange={this.handleyearchange}\n                  onOptionSelection={this.handleFilter}\n                />\n              </div>\n              <div className=\"col m-4\">\n                <Details data={filtered} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  static async getInitialProps() {\n    const res = await fetch(\n      \"https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=true&amp;land_success=true&amp;launch_year=2014\"\n    );\n    const data = await res.json();\n    let filteredarray = data.map((value) => value.launch_year);\n    let launch_year = Array.from(new Set(filteredarray));\n    let newdata = Object.values(data);\n\n    return {\n      launch_year,\n      newdata,\n    };\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}