{"ast":null,"code":"var _jsxFileName = \"/Users/moinahmed/public_sapient-assgnmt/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport Filter from \"./Filter\";\nimport React, { Component } from \"react\";\nimport Details from \"./Details\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      launch_year: [],\n      newdata: [],\n      SelectedLaunchYear: \"\",\n      SelectedOptions: \"\"\n    });\n\n    _defineProperty(this, \"handleFilter\", value => {\n      this.setState({\n        SelectedOptions: value\n      });\n    });\n\n    _defineProperty(this, \"handleyearchange\", value => {\n      this.setState({\n        SelectedLaunchYear: value,\n        SelectedOptions: []\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      launch_year: this.props.launch_year,\n      newdata: [...this.props.newdata]\n    });\n  }\n\n  render() {\n    const {\n      launch_year,\n      newdata,\n      SelectedLaunchYear,\n      SelectedOptions\n    } = this.state;\n    const filtered = SelectedLaunchYear ? newdata.filter(m => m.launch_year == SelectedLaunchYear) : newdata;\n\n    function filter(arra, options) {\n      const {\n        textProperty,\n        valueProperty\n      } = options;\n      let newarray = arra.filter(item => _.get(item, textProperty) === valueProperty);\n      return newarray;\n    }\n\n    const secondfiltered = filter(filtered, SelectedOptions);\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, __jsx(\"html\", {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"og:type\",\n      content: \"website\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"spacex launch querry site\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"og:title\",\n      content: \"SpaceX Calender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"SpaceX Calender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), __jsx(\"meta\", {\n      name: \"keywords\",\n      content: (\"SpaceX\", \"space\", \"rocket\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Create Next App\"), __jsx(\"link\", {\n      rel: \"icon\",\n      href: \"/favicon.ico\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      style: {\n        backgroundColor: \"lightgrey\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, __jsx(\"h2\", {\n      className: \"m-4 m-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"SpaceX Launch programes \"), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"col-lg-3 col-md-4 col-auto-sm-12 m-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, __jsx(Filter, {\n      launch_year: launch_year,\n      onYearChange: this.handleyearchange,\n      onOptionSelection: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      className: \"col-lg-8 col-md-6 col-auto-sm-4 m-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, __jsx(Details, {\n      data: secondfiltered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n  static async getInitialProps() {\n    const res = await fetch(\"https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=true&amp;land_success=true&amp;launch_year=2014\");\n    const data = await res.json();\n    let filteredarray = data.map(value => value.launch_year);\n    let launch_year = Array.from(new Set(filteredarray));\n    let newdata = Object.values(data);\n    return {\n      launch_year,\n      newdata\n    };\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/moinahmed/public_sapient-assgnmt/pages/index.js"],"names":["Head","Filter","React","Component","Details","Home","launch_year","newdata","SelectedLaunchYear","SelectedOptions","value","setState","componentDidMount","props","render","state","filtered","filter","m","arra","options","textProperty","valueProperty","newarray","item","_","get","secondfiltered","backgroundColor","handleyearchange","handleFilter","getInitialProps","res","fetch","data","json","filteredarray","map","Array","from","Set","Object","values"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport Filter from \"./Filter\";\nimport React, { Component } from \"react\";\nimport Details from \"./Details\";\n\nclass Home extends Component {\n  state = {\n    launch_year: [],\n    newdata: [],\n    SelectedLaunchYear: \"\",\n    SelectedOptions: \"\",\n  };\n  componentDidMount() {\n    this.setState({\n      launch_year: this.props.launch_year,\n      newdata: [...this.props.newdata],\n    });\n  }\n\n  handleFilter = (value) => {\n    this.setState({ SelectedOptions: value });\n  };\n\n  handleyearchange = (value) => {\n    this.setState({ SelectedLaunchYear: value, SelectedOptions: [] });\n  };\n\n  render() {\n    const {\n      launch_year,\n      newdata,\n      SelectedLaunchYear,\n      SelectedOptions,\n    } = this.state;\n    const filtered = SelectedLaunchYear\n      ? newdata.filter((m) => m.launch_year == SelectedLaunchYear)\n      : newdata;\n\n    function filter(arra, options) {\n      const { textProperty, valueProperty } = options;\n      let newarray = arra.filter(\n        (item) => _.get(item, textProperty) === valueProperty\n      );\n      return newarray;\n    }\n    const secondfiltered = filter(filtered, SelectedOptions);\n\n    return (\n      <>\n        <Head>\n          <html lang={\"en\"} />\n          <meta name=\"og:type\" content=\"website\" />\n          <meta name=\"description\" content={\"spacex launch querry site\"} />\n          <meta name=\"og:title\" content={\"SpaceX Calender\"} />\n          <meta name=\"description\" content={\"SpaceX Calender\"} />\n          <meta name=\"keywords\" content={(\"SpaceX\", \"space\", \"rocket\")} />\n          <title>Create Next App</title>\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Head>\n        <div style={{ backgroundColor: \"lightgrey\" }}>\n          <div className=\"container-fluid\">\n            <h2 className=\"m-4 m-4\">SpaceX Launch programes </h2>\n            <div className=\"row\">\n              <div className=\"col-lg-3 col-md-4 col-auto-sm-12 m-2 \">\n                <Filter\n                  launch_year={launch_year}\n                  onYearChange={this.handleyearchange}\n                  onOptionSelection={this.handleFilter}\n                />\n              </div>\n              <div className=\"col-lg-8 col-md-6 col-auto-sm-4 m-2 \">\n                <Details data={secondfiltered} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  static async getInitialProps() {\n    const res = await fetch(\n      \"https://api.spacexdata.com/v3/launches?limit=100&amp;launch_success=true&amp;land_success=true&amp;launch_year=2014\"\n    );\n\n    const data = await res.json();\n    let filteredarray = data.map((value) => value.launch_year);\n    let launch_year = Array.from(new Set(filteredarray));\n    let newdata = Object.values(data);\n\n    return {\n      launch_year,\n      newdata,\n    };\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}