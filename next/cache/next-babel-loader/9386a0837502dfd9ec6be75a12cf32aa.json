{"ast":null,"code":"import _ from \"lodash\";\nexport default function filter(array, options) {\n  const {\n    textProperty = \"\",\n    valueProperty\n  } = options;\n\n  let vaaal = _.get(array, textProperty);\n\n  console.log(vaaal, textProperty, _);\n  debugger;\n  let newarray = array.filter(item => {\n    _.get(item, textProperty) == valueProperty;\n  }); //   let path = textProperty ? textProperty.split(\".\") : [];\n  //   let result = path.reduce((a, v) => a[v], array);\n  //   console.log(result, path);\n  //   const filtered = options\n  //     ? array.filter((element) => element[textProperty] === valueProperty)\n  //     : array;\n  //   const newfilter = options\n  //     ? array.forEach((element) => {\n  //         // console.log(\n  //         //   element[\"rocket.first_stage.cores[0].land_success\"],\n  //         //   textProperty\n  //         );\n  //       })\n  //     : array;\n  //   console.log(filtered);\n\n  return array;\n}","map":{"version":3,"sources":["/Users/moinahmed/public_sapient-assgnmt/pages/utils/filter.jsx"],"names":["_","filter","array","options","textProperty","valueProperty","vaaal","get","console","log","newarray","item"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC7C,QAAM;AAAEC,IAAAA,YAAY,GAAG,EAAjB;AAAqBC,IAAAA;AAArB,MAAuCF,OAA7C;;AAEA,MAAIG,KAAK,GAAGN,CAAC,CAACO,GAAF,CAAML,KAAN,EAAaE,YAAb,CAAZ;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBF,YAAnB,EAAiCJ,CAAjC;AACA;AACA,MAAIU,QAAQ,GAAGR,KAAK,CAACD,MAAN,CAAcU,IAAD,IAAU;AACpCX,IAAAA,CAAC,CAACO,GAAF,CAAMI,IAAN,EAAYP,YAAZ,KAA6BC,aAA7B;AACD,GAFc,CAAf,CAN6C,CAU7C;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOH,KAAP;AACD","sourcesContent":["import _ from \"lodash\";\n\nexport default function filter(array, options) {\n  const { textProperty = \"\", valueProperty } = options;\n\n  let vaaal = _.get(array, textProperty);\n  console.log(vaaal, textProperty, _);\n  debugger;\n  let newarray = array.filter((item) => {\n    _.get(item, textProperty) == valueProperty;\n  });\n\n  //   let path = textProperty ? textProperty.split(\".\") : [];\n  //   let result = path.reduce((a, v) => a[v], array);\n  //   console.log(result, path);\n\n  //   const filtered = options\n  //     ? array.filter((element) => element[textProperty] === valueProperty)\n  //     : array;\n\n  //   const newfilter = options\n  //     ? array.forEach((element) => {\n  //         // console.log(\n  //         //   element[\"rocket.first_stage.cores[0].land_success\"],\n  //         //   textProperty\n  //         );\n  //       })\n  //     : array;\n  //   console.log(filtered);\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}